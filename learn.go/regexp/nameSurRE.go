package main

import "regexp"

// сопоставляет имена и фамилии, то есть строки, которые начинаются с заглавной буквы и продолжаются строчными. Входные данные не должны содержать никаких цифр или других символов
func matchNameSur(s string) bool {
	t := []byte(s)
	// regexp.MustCompile() анализирует данное регулярное выражение и возвращает переменную regexp.Regexp, которую можно использовать для сопоставления. Данная переменная является представлением скомпилированного регулярного выражения. Функция выдает состояние паники (panic), если выражение не может быть проанализировано, и это хорошо, поскольку уже на ранней стадии процесса вы будете знать, что ваше выражение недопустимо
	// $ - конец строки, ^ - начало. [A-Z] - первая заглавная буква. [a-z]* - за ней следует любое кол-во строчных. другие символы не пропускаются
	re := regexp.MustCompile(`^[A-Z][a-z]*$`)

	// re.Match() возвращает значение true, если данный байтовый срез соответствует регулярному выражению re, которое является переменной regexp.Regexp, и значение false в противном случае
	return re.Match(t)
}
