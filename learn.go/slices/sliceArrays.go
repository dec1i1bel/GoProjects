package main

import "fmt"

func change(s []string) { // []string - срез
	s[0] = "Change_function"
}

func main() {
	a := [4]string{"Zero", "One", "Two", "Three"}
	fmt.Println("a:", a)

	var s0 = a[0:1] // длина среза становится 1, но ёмкость - 4, так как это ёмкость по умолчанию, если она не задана
	fmt.Println(s0)
	s0[0] = "s0"

	var s12 = a[1:3]
	fmt.Println(s12)
	s12[0] = "s12_0"
	s12[1] = "s12_1"

	// из-за связываний a с s0 и s12 содержимое a изменилось
	fmt.Println("1_a:", a)

	// изменения в срезе -> изменения в массиве
	change(s12)
	fmt.Println("2_a:", a)

	// ёмкость s0
	fmt.Println("3_capacity of s0:", cap(s0), "length of s0", len(s0))

	// По мере изменения емкости s0 он больше не связан с тем же базовым массивом (a)...
	s0 = append(s0, "n1")
	s0 = append(s0, "n2")
	s0 = append(s0, "n3")
	// ... но изменения в массиве -> изменения в срезе
	a[0] = "-n1"
	fmt.Println("4_a:", a, "s0:", s0)

	// изменение емкости s0
	// Уже другой базовый массив...
	s0 = append(s0, "n4")
	// ёмкость стала 8, так как при превышении длины среза над ёмкостью последняя удваивается, если не задана. тогда срез занимаетя больше памяти, что не оптимально
	fmt.Println("5_capacity of s0:", cap(s0), "length of s0:", len(s0))

	// ... поэтому изменение a теперь не меняет s0
	a[0] = "-n1-"
	// а это меняет s12, так как ёмкость связанного среза ещё не изменилась, связь не разорвана
	a[1] = "-n2-"
	// но массив a и срез s12 по-прежнему связаны, поскольку емкость s12 не изменилась

	// окончательные версии a,s0,s12
	fmt.Println("s0:", s0)
	fmt.Println("a:", a)
	fmt.Println("s12:", s12)
}
